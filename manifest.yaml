apiVersion: v1
kind: ConfigMap
metadata:
  name: unifi-config
data:
  init-db.sh: |
    file_env 'MONGO_UNIFI_PASSWORD'
    mongo <<EOF
    use unifi
    db.createUser({
      user: "unifi",
      pwd: $(_js_escape "$MONGO_UNIFI_PASSWORD"),
      roles: [
        {role: "dbOwner", db: "unifi"},
        {role: "dbOwner", db: "unifi_stat"}
      ]
    });
    EOF
  system-properties.template: |
    db.mongo.local=false
    db.mongo.uri=mongodb://unifi:${MONGO_UNIFI_PASSWORD}@127.0.0.1:27017/unifi
    statdb.mongo.uri=mongodb://unifi:${MONGO_UNIFI_PASSWORD}@127.0.0.1:27017/unifi_stat
    unifi.db.name=unifi
---
apiVersion: v1
kind: Pod
metadata:
  name: unifi
spec:
  hostNetwork: true
  containers:
  - name: app
    image: localhost/unifi:8.6.9
    command: [ "docker-entrypoint.sh" ]
    args: [ "ace.jar" ]
    env:
    - name: SYSTEM_PROPERTIES_TEMPLATE_FILE
      value: /run/configs/unifi/system-properties.template
    - name: MONGO_UNIFI_PASSWORD_FILE
      value: /run/secrets/unifi/db_password
    - name: MEMORY_LIMIT
      value: 256M
    volumeMounts:
    - name: unifi-data
      mountPath: /var/lib/unifi/
    - name: unifi-logs
      mountPath: /var/log/unifi/
    - name: configs
      mountPath: /run/configs/unifi
    - name: secrets
      mountPath: /run/secrets/unifi
  - name: db
    image: docker.io/library/mongo:4.4.18-focal
    command: [ "docker-entrypoint.sh" ]
    args: [ "mongod" ]
    env:
    - name: MONGO_UNIFI_PASSWORD_FILE
      value: /run/secrets/unifi/db_password
    volumeMounts:
    - name: unifi-configdb
      mountPath: /data/configdb
    - name: unifi-db
      mountPath: /data/db
    - name: configs
      mountPath: /docker-entrypoint-initdb.d
    - name: secrets
      mountPath: /run/secrets/unifi
  volumes:
  - name: unifi-data
    persistentVolumeClaim:
      claimName: unifi-data
  - name: unifi-configdb
    persistentVolumeClaim:
      claimName: unifi-configdb
  - name: unifi-db
    persistentVolumeClaim:
      claimName: unifi-db
  - name: unifi-logs
    persistentVolumeClaim:
      claimName: unifi-logs
  - name: secrets
    secret:
      secretName: unifi-secret
  - name: configs
    configMap:
      name: unifi-config
